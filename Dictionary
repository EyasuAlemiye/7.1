#DD1320 Tillämpad Datalogi
#Laboration 7.1
#Eyasu-Joshua Alemiye, Erik Hellström
#Första halvan av laboration 7

#Klass där metoderna som används är metoderna som redan finns för dictionary
class DictHash:
    def __init__(self,pokemonnamn,Typ1,Typ2,Total,HåP,Attack,Defense,SPatk,SPdef,Speed,Generation,Legendary):
        self.pokemonnamn=pokemonnamn 
        self.Typ1=Typ1
        self.Typ2=Typ2
        self.Total=Total
        self.HåP=HåP 
        self.Attack=Attack
        self.Defense=Defense
        self.SPatk=SPatk
        self.SPdef=SPdef
        self.Speed=Speed
        self.Generation=Generation
        self.Legendary=Legendary  
        
#lagrar nyckel/data
    def store(self,nyckel,data):
        pokedictionary[nyckel]=data

    #metod för att söka efter pokemon + dess stats
    def search(self,nyckel):
        värdet=pokedictionary.get(nyckel)
        return värdet



#tagen från tidigare labb.
pokedictionary={}
with open(r"fil", "r", encoding = "utf-8") as allapokemons:
        for rad in allapokemons:
            pokemon= rad.strip()
            specifikinfo=pokemon.split(',')  
            pokemonnamn=specifikinfo[1]
            Typ1=specifikinfo[2]
            Typ2=specifikinfo[3]
            Total=specifikinfo[4]
            HåP=specifikinfo[5] 
            Attack=specifikinfo[6]
            Defense=specifikinfo[7]
            SPatk=specifikinfo[8] 
            SPdef=specifikinfo[9]
            Speed=specifikinfo[10]
            Generation=specifikinfo[11]
            Legendary=specifikinfo[12]
            d=DictHash(pokemonnamn,Typ1,Typ2,Total,HåP,Attack,Defense,SPatk,SPdef,Speed,Generation,Legendary) 
            d.store(pokemonnamn,d) 

#returnerade värdet är objektet för sökt pokemon. Om pokemonet inte finns hoppar vi ner till except-satsen som printar ut och sedan anropar menyval()
def sökapokemon(nyckel):
    x=d.search(nyckel)
    while True:
        try:
            print(f'Pokemon finns!\nRelevant info om pokemon: {x.pokemonnamn}\nTyp 1:{x.Typ1}\nTyp 2:{x.Typ2}\nTotal: {x.Total}\nHp: {x.HåP}\nAttack: {x.Attack}\nDefense: {x.Defense}\nSPatk: {x.SPatk}\nSPdef: {x.SPdef}\nSpeed: {x.Speed}\nGeneration: {x.Generation}\nLegendary: {x.Legendary}')
            menyval()
        except AttributeError:
                print('Pokemon saknas!')
                menyval()


#Funktion för att mata in pokemon och dess stats
def läggatillpokemon(): 
    poke=str(input('Vad är det för pokemon du vill lägga till?: '))
    pokemonstats=[input('Ange Typ1:'),input('Ange Typ2:'),
                input('Ange Total:'),input('Ange Hp:'),input('Ange Attack:'),
                input('Ange Defense:'),input('Ange SPatk:'),input('Ange SPdef:'),input('Ange Speed:'),
                input('Ange Generation:'),input('Ange Legendary:')]
    d.store(poke,DictHash(poke,pokemonstats[0],pokemonstats[1],pokemonstats[2],pokemonstats[3],pokemonstats[4],pokemonstats[5],pokemonstats[6],pokemonstats[7],pokemonstats[8],pokemonstats[9],pokemonstats[10]))
    menyval()
 
#menyval för två utav metoderna
def menyval():
    vald=int(input('Vad vill du göra?\n 1: Lägga in kort\n 2: Slå upp pokemon.\n 3. Avsluta\n '))
    if vald==1:
        läggatillpokemon()
    if vald==2:
        pokemoninput=input('Vilket pokemon vill du slå upp? ')
        sökapokemon(pokemoninput)
    if vald==3:
        print('Program avslutad')

menyval()
